---
import Dropdown from "./dropdown.astro";
import { Astronav, MenuItems, MenuIcon } from "astro-navbar";
import Logo from "./Logo.astro";
import { Icon } from "astro-icon";

const menuitems = [
  {
    title: "TERMÉKEK",
    children: [
      { title: "Télikert", path: "/termekek/#telikert" },
      { title: "Teraszbeépítés", path: "/termekek/#terasz" },
      { title: "Medencefedés", path: "/termekek/#medencefedes" },
      { title: "Szélfogó", path: "/termekek/#szelfogo" },
      { title: "Elő-védőtető", path: "/termekek/#vedoteto" },
      { title: "Függönyfal", path: "/termekek/#fuggonyfal" },
      { title: "Bevilágító kupola", path: "/termekek/#kupola" },
    ],
  },
  {
    title: "SZOLGÁLTATÁSOK",
    children: [
      { title: "Lakásfelújítás", path: "/szolgaltatasok/#lakasfelujitas" },
      { title: "Nyílászáró", path: "/szolgaltatasok/#nyilaszaro" },
    ],
  },
  {
    title: "NAPVÉDELEM",
    path: "/napvedelem",
  },
  {
    title: "RÓLUNK",
    children: [
      { title: "Rólunk", path: "/rolunk/#rolunk" },
      { title: "Munkatársaink", path: "/rolunk/#munkatarsaink" },
      { title: "Építőanyagok", path: "/rolunk/#anyagaink" },
    ],
  },
  {
    title: "KAPCSOLAT",
    path: "/kapcsolat/",
  },
];
const isSticky = true;
const logoWidth = 140;
---

<nav
  id="navbar"
  class:list={[
    { sticky: isSticky, relative: !isSticky },
    "text-lg top-0 z-40 py-0 flex-none mx-auto w-full transition-all ease-in duration-100 lg:bg-beridoorBlue",
  ]}>
  <div class="mx-6">
    <header class="flex flex-col lg:flex-row justify-between items-center">
      <Astronav>
        <div class="flex py-2 w-full lg:w-auto items-center justify-between">
          <Logo width={logoWidth} />
          <div class="block rounded-md pl-[2px] pr-[5px] bg-white lg:hidden">
            <MenuIcon class="w-4 h-4 text-gray-800" />
          </div>
        </div>
        <MenuItems class="hidden w-full lg:w-auto mt-2 lg:flex flex-col items-end lg:mt-0">
          <div class="hidden lg:flex text-sm text-gray-100 lg:px-3 mt-2 lg:gap-8 justify-between">
            <button id="moon-button" class="hidden">
              <Icon class="pb-[1px] hover:text-white text-gray-400 w-6 h-6" name="akar-icons:moon-fill" />
            </button>
            <button id="sun-button" class="hidden">
              <Icon class="pb-[1px] hover:text-yellow-300 text-gray-400 w-6 h-6" name="ph:sun-fill" />
            </button>
            <div class="flex lg:gap-1 justify-center">
              <Icon class="mt-1 text-gray-400 w-3 h-3" name="bi:telephone-fill" />
              <p>Személyes konzultáció</p>
              <a href="tel:+36 30 931 4070">+36 30 931 4070</a>
            </div>
            <div class="flex lg:gap-1 justify-center">
              <Icon class="mt-[2px] text-gray-400 w-4 h-4" name="clock-filled" />
              <p>H-P 9:00 - 17:00</p>
            </div>
            <a href="/kapcsolat/">Ajánlatkérés</a>
          </div>
          <ul class="flex flex-col lg:flex-row lg:gap-1">
            {
              menuitems.map((item, index) => (
                <div class="navbar-items">
                  {item.children && <Dropdown title={item.title} children={item.children} />}

                  {!item.children && (
                    <li>
                      <a
                        href={item.path}
                        class="flex lg:px-3 py-2 lg:text-gray-100 lg:hover:text-white text-beridoorBlue hover:text-black dark:text-gray-100 dark:hover:text-white">
                        {item.title}
                      </a>
                    </li>
                  )}
                </div>
              ))
            }
          </ul>
        </MenuItems>
        <!-- <Logo width={logoWidth} isInvisible={true}/> -->
      </Astronav>
    </header>
  </div>
</nav>
<script>
  import { animate } from "motion";
  function setDarkMode(darkIconElement, lightIconElement, rootHtmlElement) {
    darkIconElement?.classList.add("hidden");
    lightIconElement?.classList.remove("hidden");
    rootHtmlElement?.classList.add("dark");
  }

  function setLightMode(darkIconElement, lightIconElement, rootHtmlElement) {
    darkIconElement?.classList.remove("hidden");
    lightIconElement?.classList.add("hidden");
    rootHtmlElement?.classList.remove("dark");
  }

  const elements = document.getElementsByClassName("navbar-items");
  const lightModeEnabled = localStorage.getItem("lightMode");
  const moonButton = document.getElementById("moon-button");
  const sunButton = document.getElementById("sun-button");
  const htmlRootElement = document.documentElement;
  if (lightModeEnabled === "true") {
    setLightMode(moonButton, sunButton, htmlRootElement);
  } else {
    setDarkMode(moonButton, sunButton, htmlRootElement);
  }
  sunButton?.addEventListener("click", () => {
    setLightMode(moonButton, sunButton, htmlRootElement);
    localStorage.setItem("lightMode", "true");
  });
  moonButton?.addEventListener("click", () => {
    setDarkMode(moonButton, sunButton, htmlRootElement);
    localStorage.setItem("lightMode", "false");
  });
  for (let i = 0; i < elements.length; i++) {
    const elem = elements[i];
    elem?.addEventListener("mouseover", (e) => {
      if (window.innerWidth >= 1024) {
        // lg
        animate(elem, { scale: 1.1 });
      }
    });
    elem?.addEventListener("mouseout", (e) => {
      if (window.innerWidth >= 1024) {
        // lg
        animate(elem, { scale: 1.0 });
      }
    });
  }
</script>
